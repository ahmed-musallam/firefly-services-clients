/**
 * Generated by orval v7.14.0 üç∫
 * Do not edit manually.
 * Firefly API
 * REST API for Adobe Firefly for enterprise usage
 * OpenAPI spec version: V2
 */
import type { StorageImageResponse } from './upload-image-client.schemas';

import { customAxiosInstance } from '../../mutator/custom-axios-instance';

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

/**
 * Upload source image or mask for image-to-image operations, such as fill, expand. This API returns an identifier that is used to refer to uploaded content. The uploaded assets will be valid for 7 days from the date you upload them.
 * @summary Upload
 */
export const storageImageV2 = (
  storageImageV2Body: Blob,
  options?: SecondParameter<typeof customAxiosInstance<StorageImageResponse>>
) => {
  return customAxiosInstance<StorageImageResponse>(
    {
      url: `https://firefly-api.adobe.io/v2/storage/image`,
      method: 'POST',
      headers: { 'Content-Type': 'image/jpeg' },
      data: storageImageV2Body,
    },
    options
  );
};

export type StorageImageV2Result = NonNullable<Awaited<ReturnType<typeof storageImageV2>>>;
