/**
 * Generated by orval v7.14.0 üç∫
 * Do not edit manually.
 * Firefly API
 * REST API for Adobe Firefly for enterprise use.
 * OpenAPI spec version: V3
 */
export interface ErrorResponse {
  /** The type of error that occurred. */
  reason?: string;
  /** A message describing the error. */
  message?: string;
}

export interface CustomModelsFF3pInfo {
  /** Custom Models List */
  custom_models?: CustomModelFF3pInfo[];
  _links?: Links;
  /** Total results for query */
  total_count?: number;
}

/**
 * The [training mode of the model](../firefly-api-reference/custom-models.md#training-mode). When this is 'subject', the 'conceptId' must be mentioned in the prompt.
 */
export type CustomModelFF3pInfoTrainingMode =
  (typeof CustomModelFF3pInfoTrainingMode)[keyof typeof CustomModelFF3pInfoTrainingMode];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CustomModelFF3pInfoTrainingMode = {
  subject: 'subject',
  style: 'style',
} as const;

/**
 * Status for the asset. The 'unpublished' value applies when an asset is published and then subsequently revoked.
 */
export type CustomModelFF3pInfoPublishedState =
  (typeof CustomModelFF3pInfoPublishedState)[keyof typeof CustomModelFF3pInfoPublishedState];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CustomModelFF3pInfoPublishedState = {
  never: 'never',
  published: 'published',
  unpublished: 'unpublished',
} as const;

/**
 * Custom Model info
 */
export interface CustomModelFF3pInfo {
  /** Custom Model version. */
  version?: string;
  /** Custom Model name. */
  assetName?: string;
  /** The storage amount used. */
  size?: number;
  /** An identifier for the specific version of the asset. */
  etag?: string;
  /** The [training mode of the model](../firefly-api-reference/custom-models.md#training-mode). When this is 'subject', the 'conceptId' must be mentioned in the prompt. */
  trainingMode?: CustomModelFF3pInfoTrainingMode;
  /** A unique identifier for the asset. */
  assetId?: string;
  /** The media type specific to the asset. */
  mediaType?: string;
  createdDate?: string;
  modifiedDate?: string;
  /** Status for the asset. The 'unpublished' value applies when an asset is published and then subsequently revoked. */
  publishedState?: CustomModelFF3pInfoPublishedState;
  /** The underlying GenAI model used to train the Custom Model. */
  baseModel?: BaseModel;
  /** Example string provided by the custom model's trainer */
  samplePrompt?: string;
  /** The asset name provided by the user, mapped from the name of the training set library. */
  displayName?: string;
  /** When 'trainingMode' is 'subject', this string specifies the subject for the prompt. */
  conceptId?: string;
}

export interface BaseModel {
  name?: string;
  version?: string;
}

/**
 * Collection of hypermedia links for pagination, navigation, etc.
 */
export interface Links {
  page?: Link;
  next?: Link;
}

/**
 * Standard representation of a hypermedia link.
 */
export interface Link {
  /** Fully qualified URI or relative path for the link. */
  href?: string;
  /** Describes the relationship or function of the link (e.g. `next`, `page`, `self`). */
  rel?: string;
  /** Indicates whether or not the `href` supports URI template parameters. */
  templated?: boolean;
}

/**
 * List Page
 */
export interface PageSpec {
  /** List orderby */
  orderBy?: string;
  /** List start position */
  start?: string;
  /** List next position */
  next?: string;
  /** List page size */
  count?: number;
  /** List page type */
  type?: string;
  /** List page property */
  property?: string;
}

export type GetCustomModelsParams = {
  /**
   * A sorting option for the response list. For a reverse sort, use `-` (e.g., `-modifiedDate`). Multi-vector sorting is not currently supported.
   */
  sortBy?: GetCustomModelsSortBy;
  /**
   * The first result to include in a paginated response. Required if a `limit` is specified.
   */
  start?: string;
  /**
   * The number of custom models to return in a paginated response.
   * @minimum 1
   * @maximum 50
   */
  limit?: string;
  /**
   * This filters custom models by published state.
   */
  publishedState?: GetCustomModelsPublishedState;
};

export type GetCustomModelsSortBy =
  (typeof GetCustomModelsSortBy)[keyof typeof GetCustomModelsSortBy];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetCustomModelsSortBy = {
  assetName: 'assetName',
  createdDate: 'createdDate',
  modifiedDate: 'modifiedDate',
} as const;

export type GetCustomModelsPublishedState =
  (typeof GetCustomModelsPublishedState)[keyof typeof GetCustomModelsPublishedState];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetCustomModelsPublishedState = {
  all: 'all',
  ready: 'ready',
  published: 'published',
  unpublished: 'unpublished',
  queued: 'queued',
  training: 'training',
  failed: 'failed',
  cancelled: 'cancelled',
} as const;
